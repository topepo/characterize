% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multi_characterize.R
\name{multi_characterize}
\alias{multi_characterize}
\alias{multi_characterize.default}
\alias{multi_characterize.workflow}
\alias{multi_characterize.model_fit}
\alias{multi_characterize._elnet}
\alias{multi_characterize.glmnet}
\alias{multi_characterize._multnet}
\alias{multi_characterize.multnet}
\alias{multi_characterize._lognet}
\alias{multi_characterize.lognet}
\alias{multi_characterize._fishnet}
\alias{multi_characterize.fishnet}
\alias{multi_characterize.cubist}
\alias{multi_characterize.C5.0}
\alias{multi_characterize.xgb.Booster}
\alias{multi_characterize.xrf}
\alias{multi_characterize.lgb_trees}
\alias{multi_characterize.lgb.Booster}
\title{Model characterizations across multiple configurations}
\usage{
multi_characterize(object, ...)

\method{multi_characterize}{default}(object, ...)

\method{multi_characterize}{workflow}(object, ...)

\method{multi_characterize}{model_fit}(object, ...)

\method{multi_characterize}{`_elnet`}(object, penalty = NULL, ...)

\method{multi_characterize}{glmnet}(object, penalty = NULL, ...)

\method{multi_characterize}{`_multnet`}(object, penalty = NULL, ...)

\method{multi_characterize}{multnet}(object, penalty = NULL, ...)

\method{multi_characterize}{`_lognet`}(object, penalty = NULL, ...)

\method{multi_characterize}{lognet}(object, penalty = NULL, ...)

\method{multi_characterize}{`_fishnet`}(object, penalty = NULL, ...)

\method{multi_characterize}{fishnet}(object, penalty = NULL, ...)

\method{multi_characterize}{cubist}(object, committees = object$committees, ...)

\method{multi_characterize}{C5.0}(object, trials = object$trials["Actual"], ...)

\method{multi_characterize}{xgb.Booster}(object, nrounds = object$niter, ...)

\method{multi_characterize}{xrf}(object, penalty = NULL, ...)

\method{multi_characterize}{lgb_trees}(object, trees = NULL, ...)

\method{multi_characterize}{lgb.Booster}(object, trees = NULL, ...)
}
\arguments{
\item{object}{A \code{model_fit} object.}

\item{...}{Optional arguments (not currently used)}

\item{penalty}{A numeric vector of penalty values (a.k.a. \code{lambda} for some
models).}

\item{committees}{The number of Cubist committees to use in the examination.}

\item{trials, nrounds}{The number of boosting to use in the examination.}
}
\value{
A tibble of characterized results (\code{results}) with extra columns for the
sub-model parameter. If there is no specific \code{multi_characterize()} method, there
are not parameter columns and the \code{results} column has the results of
using a basic \code{\link[=characterize]{characterize()}} call.
}
\description{
Some models can make predictions for multiple configurations using the same
model object. For example, many boosted tree models using \code{m} trees can also
make predictions when fewer than \code{m} trees were used. These are sometimes
called "sub-model parameters".

For such a model, \code{multi_characterize()} can produce multiple results from
the same object. If the model does not allow for this, the results of
\code{\link[=characterize]{characterize()}} are returned.
}
\details{
For \code{glmnet} models, there are methods for the different classes of that model
(a.k.a. \code{lognet} class for Poisson models) as well as a variation of that
class (\verb{_lognet}). The latter case corresponds to the object produced by the
\pkg{parsnip} package for that model.
}
\examples{
\dontshow{if (characterize:::is_rcmd_check()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
if (rlang::is_installed(c("modeldata", "ggplot2", "Cubist"))) {
  library(Cubist)
  library(dplyr)
  library(ggplot2)
  library(tidyr)

  # ----------------------------------------------------------------------------

  data(ames, package = "modeldata")
  ames$Sale_Price <- log10(ames$Sale_Price)

  cubist_fit <-
    cubist(x = ames \%>\% select(-Sale_Price), y = ames$Sale_Price, committees = 5)

  # ----------------------------------------------------------------------------
  # Get results for a specific model configuration

  characterize(cubist_fit, committees = 3)

  # ----------------------------------------------------------------------------
  # Get results for many model configurations

  res <- multi_characterize(cubist_fit, committees = 1:5)
  res

  # unnest to use them:
  res \%>\%
    unnest(cols = results) \%>\%
    ggplot(aes(committees, .estimate)) +
    geom_point() +
    facet_wrap(~ .metric, scale = "free_y")
}
\dontshow{\}) # examplesIf}
}
\seealso{
\code{\link[=characterize]{characterize()}}
}
