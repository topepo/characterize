[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement max@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 RStudio Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Max Kuhn. Maintainer, author. RStudio. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kuhn M (2023). characterize: Characteristics Fitted Model. R package version 0.0.0.9000.","code":"@Manual{,   title = {characterize: Characteristics of a Fitted Model},   author = {Max Kuhn},   year = {2023},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"characterize","dir":"","previous_headings":"","what":"Characteristics of a Fitted Model","title":"Characteristics of a Fitted Model","text":"goal characterize report data driven characteristics model fit describe model. example: number predictors used, number terminal nodes, . interesting characteristics model often reflect complexity model.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Characteristics of a Fitted Model","text":"can install development version characterize like :","code":"require(remotes) remotes::install_github(\"topepo/characterize\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Characteristics of a Fitted Model","text":"basic example shows solve common problem: Objects least one method: bagger, bart, C5.0, cforest, cubist, earth, glmnet, ksvm, mixo_pls, mixo_plsda, mixo_spls, mixo_splsda, multinom, nnet, party, partynode, ranger, rpart, terms, xgb.Booster, xrf.","code":"library(characterize) library(rpart)  cart_mod <- rpart(mpg ~ ., data = mtcars) cart_mod #> n= 32  #>  #> node), split, n, deviance, yval #>       * denotes terminal node #>  #> 1) root 32 1126.04700 20.09062   #>   2) cyl>=5 21  198.47240 16.64762   #>     4) hp>=192.5 7   28.82857 13.41429 * #>     5) hp< 192.5 14   59.87214 18.26429 * #>   3) cyl< 5 11  203.38550 26.66364 *  characterize(cart_mod) #> # A tibble: 2 × 3 #>   .metric             .estimator .estimate #>   <chr>               <chr>          <dbl> #> 1 num_active_features model              2 #> 2 num_term_nodes      model              3  # Also some low-level functions:  .pluck_active_features(cart_mod) %>%    tidyr::unnest(value) #> # A tibble: 2 × 2 #>   statistic       value #>   <chr>           <chr> #> 1 active_features cyl   #> 2 active_features hp"},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Characteristics of a Fitted Model","text":"Please note characterize project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/reference/characterize.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute model characteristics — characterize","title":"Compute model characteristics — characterize","text":"characterize() attempts report data driven characteristics model fit describe model. example, number predictors used, number terminal nodes, etc. interesting characteristics model often reflect complexity model.","code":""},{"path":"/reference/characterize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute model characteristics — characterize","text":"","code":"characterize(x, ...)  # S3 method for default characterize(x, ...)  # S3 method for model_fit characterize(x, ...)  # S3 method for workflow characterize(x, ...)  # S3 method for glmnet characterize(x, penalty = 0.001, ...)  # S3 method for cubist characterize(x, committees = NULL, ...)  # S3 method for tidy_cubist characterize(x, committees = NULL, ...)  # S3 method for cubist characterize(x, committees = NULL, ...)  # S3 method for tidy_C50 characterize(x, trials = max(x$trial), ...)  # S3 method for C5.0 characterize(x, trials = x$trials[\"Actual\"], ...)  # S3 method for xgb.Booster characterize(x, nrounds = x$niter, ...)  # S3 method for tidy_xrf characterize(x, penalty = 0.001, ...)  # S3 method for xrf characterize(x, penalty = 0.001, ...)  # S3 method for lgb.Booster characterize(x, trees = NULL, ...)"},{"path":"/reference/characterize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute model characteristics — characterize","text":"x object. ... currently used. penalty numeric parameter value amount regularization/penalty model. committees number Cubist committees use examination. trials, nrounds, trees number boosting use examination.","code":""},{"path":"/reference/characterize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute model characteristics — characterize","text":"tibble columns .metric, .estimator, .estimate. statistics compute, zero-row tibble returned. Integer values converted double.","code":""},{"path":"/reference/characterize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute model characteristics — characterize","text":"list object types supported, see list_characteristics().","code":""},{"path":[]},{"path":"/reference/characterize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute model characteristics — characterize","text":"","code":"library(rpart) cart_mod <- rpart(mpg ~ ., data = mtcars) characterize(cart_mod) #> # A tibble: 2 × 3 #>   .metric             .estimator .estimate #>   <chr>               <chr>          <dbl> #> 1 num_active_features model              2 #> 2 num_term_nodes      model              3  # When there is nothing to report: ppr_mod <- ppr(mpg ~ ., data = mtcars, nterms = 5) characterize(ppr_mod) #> # A tibble: 0 × 3 #> # … with 3 variables: .metric <chr>, .estimator <chr>, .estimate <dbl>"},{"path":"/reference/list_characteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Show lists of models and characteristics — list_characteristics","title":"Show lists of models and characteristics — list_characteristics","text":"Show lists models characteristics","code":""},{"path":"/reference/list_characteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show lists of models and characteristics — list_characteristics","text":"","code":"list_characteristics()  object_list()"},{"path":"/reference/list_characteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show lists of models and characteristics — list_characteristics","text":"list_characteristics() returns tibble columns characteristic object. object_list() returns character string.","code":""},{"path":"/reference/multi_characterize.html","id":null,"dir":"Reference","previous_headings":"","what":"Model characterizations across multiple configurations — multi_characterize","title":"Model characterizations across multiple configurations — multi_characterize","text":"models can make predictions multiple configurations using model object. example, many boosted tree models using m trees can also make predictions fewer m trees used. sometimes called \"sub-model parameters\". model, multi_characterize() can produce multiple results object. model allow , results characterize() returned.","code":""},{"path":"/reference/multi_characterize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model characterizations across multiple configurations — multi_characterize","text":"","code":"multi_characterize(object, ...)  # S3 method for default multi_characterize(object, ...)  # S3 method for workflow multi_characterize(object, ...)  # S3 method for model_fit multi_characterize(object, ...)  # S3 method for `_elnet` multi_characterize(object, penalty = NULL, ...)  # S3 method for glmnet multi_characterize(object, penalty = NULL, ...)  # S3 method for `_multnet` multi_characterize(object, penalty = NULL, ...)  # S3 method for multnet multi_characterize(object, penalty = NULL, ...)  # S3 method for `_lognet` multi_characterize(object, penalty = NULL, ...)  # S3 method for lognet multi_characterize(object, penalty = NULL, ...)  # S3 method for `_fishnet` multi_characterize(object, penalty = NULL, ...)  # S3 method for fishnet multi_characterize(object, penalty = NULL, ...)  # S3 method for cubist multi_characterize(object, committees = object$committees, ...)  # S3 method for C5.0 multi_characterize(object, trials = object$trials[\"Actual\"], ...)  # S3 method for xgb.Booster multi_characterize(object, nrounds = object$niter, ...)  # S3 method for xrf multi_characterize(object, penalty = NULL, ...)  # S3 method for lgb_trees multi_characterize(object, trees = NULL, ...)  # S3 method for lgb.Booster multi_characterize(object, trees = NULL, ...)"},{"path":"/reference/multi_characterize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model characterizations across multiple configurations — multi_characterize","text":"object model_fit object. ... Optional arguments (currently used) penalty numeric parameter value amount regularization/penalty model. committees number Cubist committees use examination. trials, nrounds, trees number boosting use examination.","code":""},{"path":"/reference/multi_characterize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model characterizations across multiple configurations — multi_characterize","text":"tibble characterized results (results) extra columns sub-model parameter. specific multi_characterize() method, parameter columns results column results using basic characterize() call.","code":""},{"path":"/reference/multi_characterize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model characterizations across multiple configurations — multi_characterize","text":"glmnet models, methods different classes model (.k.. lognet class Poisson models) well variation class (_lognet). latter case corresponds object produced parsnip package model.","code":""},{"path":[]},{"path":"/reference/multi_characterize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model characterizations across multiple configurations — multi_characterize","text":"","code":"if (FALSE) { # characterize:::is_rcmd_check() if (rlang::is_installed(c(\"modeldata\", \"ggplot2\", \"Cubist\"))) {   library(Cubist)   library(dplyr)   library(ggplot2)   library(tidyr)    # ----------------------------------------------------------------------------    data(ames, package = \"modeldata\")   ames$Sale_Price <- log10(ames$Sale_Price)    cubist_fit <-     cubist(x = ames %>% select(-Sale_Price), y = ames$Sale_Price, committees = 5)    # ----------------------------------------------------------------------------   # Get results for a specific model configuration    characterize(cubist_fit, committees = 3)    # ----------------------------------------------------------------------------   # Get results for many model configurations    res <- multi_characterize(cubist_fit, committees = 1:5)   res    # unnest to use them:   res %>%     unnest(cols = results) %>%     ggplot(aes(committees, .estimate)) +     geom_point() +     facet_wrap(~ .metric, scale = \"free_y\") } }"},{"path":"/reference/pluck_active_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictors used in the model — pluck_active_features","title":"Predictors used in the model — pluck_active_features","text":"Predictors used model","code":""},{"path":"/reference/pluck_active_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictors used in the model — pluck_active_features","text":"","code":".pluck_active_features(x, ...)  # S3 method for default .pluck_active_features(x, ...)  # S3 method for workflow .pluck_active_features(x, ...)  # S3 method for model_fit .pluck_active_features(x, ...)  # S3 method for terms .pluck_active_features(x, ...)  # S3 method for rpart .pluck_active_features(x, ...)  # S3 method for ranger .pluck_active_features(x, ...)  # S3 method for xgb.Booster .pluck_active_features(x, nrounds = x$niter, ...)  # S3 method for glmnet .pluck_active_features(x, penalty = 0.001, ...)  # S3 method for tidy_cubist .pluck_active_features(x, committees = max(x$committee), ...)  # S3 method for cubist .pluck_active_features(x, committees = x$committees, ...)  # S3 method for tidy_C50 .pluck_active_features(x, trials = max(x$trial), ...)  # S3 method for C5.0 .pluck_active_features(x, trials = x$trials[\"Actual\"], ...)  # S3 method for earth .pluck_active_features(x, ...)  # S3 method for mixo_spls .pluck_active_features(x, ...)  # S3 method for mixo_pls .pluck_active_features(x, ...)  # S3 method for mixo_splsda .pluck_active_features(x, ...)  # S3 method for mixo_plsda .pluck_active_features(x, ...)  # S3 method for bagger .pluck_active_features(x, ...)  # S3 method for bart .pluck_active_features(x, ...)  # S3 method for party .pluck_active_features(x, ...)  # S3 method for cforest .pluck_active_features(x, ...)  # S3 method for tidy_xrf .pluck_active_features(x, ...)  # S3 method for xrf .pluck_active_features(x, penalty = 0.001, ...)  # S3 method for bagger .pluck_active_features(x, ...)  # S3 method for lgb_trees .pluck_active_features(x, trees = max(x$trees), ...)  # S3 method for lgb.Booster .pluck_active_features(x, trees = x$params$num_iterations, ...)"},{"path":"/reference/pluck_active_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictors used in the model — pluck_active_features","text":"x object. ... currently used. penalty numeric parameter value amount regularization/penalty model. committees number Cubist committees use examination. trials, nrounds, trees number boosting use examination.","code":""},{"path":"/reference/pluck_mean_rule_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the mean number of predictor in rules in a rule-based model — pluck_mean_rule_size","title":"Compute the mean number of predictor in rules in a rule-based model — pluck_mean_rule_size","text":"Compute mean number predictor rules rule-based model","code":""},{"path":"/reference/pluck_mean_rule_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the mean number of predictor in rules in a rule-based model — pluck_mean_rule_size","text":"","code":".pluck_mean_rule_size(x, ...)  # S3 method for default .pluck_mean_rule_size(x, ...)  # S3 method for workflow .pluck_mean_rule_size(x, ...)  # S3 method for model_fit .pluck_mean_rule_size(x, ...)  # S3 method for tidy_C50 .pluck_mean_rule_size(x, trials = max(x$trial), ...)  # S3 method for C5.0 .pluck_mean_rule_size(x, trials = x$trials[\"Actual\"], ...)  # S3 method for tidy_cubist .pluck_mean_rule_size(x, committees = max(x$committee), ...)  # S3 method for cubist .pluck_mean_rule_size(x, committees = x$committees, ...)  # S3 method for tidy_xrf .pluck_mean_rule_size(x, ...)  # S3 method for xrf .pluck_mean_rule_size(x, penalty = 0.001, ...)"},{"path":"/reference/pluck_mean_rule_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the mean number of predictor in rules in a rule-based model — pluck_mean_rule_size","text":"x object. ... currently used. committees number Cubist committees use examination. penalty numeric parameter value amount regularization/penalty model.","code":""},{"path":"/reference/pluck_num_active_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of predictors used in the model — pluck_num_active_features","title":"Number of predictors used in the model — pluck_num_active_features","text":"Number predictors used model","code":""},{"path":"/reference/pluck_num_active_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of predictors used in the model — pluck_num_active_features","text":"","code":".pluck_num_active_features(x, ...)  # S3 method for default .pluck_num_active_features(x, ...)  # S3 method for workflow .pluck_num_active_features(x, ...)  # S3 method for model_fit .pluck_num_active_features(x, ...)  # S3 method for glmnet .pluck_num_active_features(x, penalty = 0.001, ...)  # S3 method for tidy_cubist .pluck_num_active_features(x, committees = max(x$committee), ...)  # S3 method for cubist .pluck_num_active_features(x, committees = x$committees, ...)  # S3 method for tidy_C50 .pluck_num_active_features(x, trials = max(x$trial), ...)  # S3 method for C5.0 .pluck_num_active_features(x, trials = x$trials[\"Actual\"], ...)  # S3 method for tidy_xrf .pluck_num_active_features(x, ...)  # S3 method for xrf .pluck_num_active_features(x, penalty = 0.001, ...)  # S3 method for lgb_trees .pluck_num_active_features(x, trees = max(x$num_iterations), ...)  # S3 method for lgb.Booster .pluck_num_active_features(x, trees = x$params$num_iterations, ...)"},{"path":"/reference/pluck_num_active_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of predictors used in the model — pluck_num_active_features","text":"x object. ... currently used. penalty numeric parameter value amount regularization/penalty model. committees number Cubist committees use examination.","code":""},{"path":"/reference/pluck_num_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the number of estimated model parameters — pluck_num_parameters","title":"Compute the number of estimated model parameters — pluck_num_parameters","text":"Compute number estimated model parameters","code":""},{"path":"/reference/pluck_num_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the number of estimated model parameters — pluck_num_parameters","text":"","code":".pluck_num_parameters(x, ...)  # S3 method for default .pluck_num_parameters(x, ...)  # S3 method for workflow .pluck_num_parameters(x, ...)  # S3 method for model_fit .pluck_num_parameters(x, ...)  # S3 method for tidy_cubist .pluck_num_parameters(x, committees = max(x$committee), ...)  # S3 method for cubist .pluck_num_parameters(x, committees = x$committees, ...)  # S3 method for multinom .pluck_num_parameters(x, ...)  # S3 method for nnet .pluck_num_parameters(x, ...)  # S3 method for brulee_mlp .pluck_num_parameters(x, ...)  # S3 method for glmnet .pluck_num_parameters(x, penalty = 0.001, ...)  # S3 method for earth .pluck_num_parameters(x, ...)  # S3 method for mixo_spls .pluck_num_parameters(x, ...)  # S3 method for mixo_pls .pluck_num_parameters(x, ...)  # S3 method for mixo_splsda .pluck_num_parameters(x, ...)  # S3 method for mixo_plsda .pluck_num_parameters(x, ...)  # S3 method for tidy_xrf .pluck_num_parameters(x, ...)  # S3 method for xrf .pluck_num_parameters(x, penalty = 0.001, ...)  # S3 method for bagger .pluck_num_parameters(x, ...)"},{"path":"/reference/pluck_num_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the number of estimated model parameters — pluck_num_parameters","text":"x object. ... currently used. committees number Cubist committees use examination. penalty numeric parameter value amount regularization/penalty model.","code":""},{"path":"/reference/pluck_num_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the number of rules in a rule-based model — pluck_num_rules","title":"Compute the number of rules in a rule-based model — pluck_num_rules","text":"Compute number rules rule-based model","code":""},{"path":"/reference/pluck_num_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the number of rules in a rule-based model — pluck_num_rules","text":"","code":".pluck_num_rules(x, ...)  # S3 method for default .pluck_num_rules(x, ...)  # S3 method for workflow .pluck_num_rules(x, ...)  # S3 method for model_fit .pluck_num_rules(x, ...)  # S3 method for tidy_C50 .pluck_num_rules(x, trials = max(x$trial), ...)  # S3 method for C5.0 .pluck_num_rules(x, trials = x$trials[\"Actual\"], ...)  # S3 method for tidy_cubist .pluck_num_rules(x, committees = max(x$committee), ...)  # S3 method for cubist .pluck_num_rules(x, committees = x$committees, ...)  # S3 method for tidy_xrf .pluck_num_rules(x, ...)  # S3 method for xrf .pluck_num_rules(x, penalty = 0.001, ...)"},{"path":"/reference/pluck_num_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the number of rules in a rule-based model — pluck_num_rules","text":"x object. ... currently used. committees number Cubist committees use examination. penalty numeric parameter value amount regularization/penalty model.","code":""},{"path":"/reference/pluck_num_support_vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of total support vectors used by kernel model — pluck_num_support_vectors","title":"Number of total support vectors used by kernel model — pluck_num_support_vectors","text":"Number total support vectors used kernel model","code":""},{"path":"/reference/pluck_num_support_vectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of total support vectors used by kernel model — pluck_num_support_vectors","text":"","code":".pluck_num_support_vectors(x, ...)  # S3 method for default .pluck_num_support_vectors(x, ...)  # S3 method for workflow .pluck_num_support_vectors(x, ...)  # S3 method for model_fit .pluck_num_support_vectors(x, ...)  # S3 method for ksvm .pluck_num_support_vectors(x, ...)"},{"path":"/reference/pluck_num_support_vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of total support vectors used by kernel model — pluck_num_support_vectors","text":"x object. ... currently used.","code":""},{"path":"/reference/pluck_num_term_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the number of terminal nodes in a tree-based model — pluck_num_term_nodes","title":"Compute the number of terminal nodes in a tree-based model — pluck_num_term_nodes","text":"Compute number terminal nodes tree-based model","code":""},{"path":"/reference/pluck_num_term_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the number of terminal nodes in a tree-based model — pluck_num_term_nodes","text":"","code":".pluck_num_term_nodes(x, ...)  # S3 method for default .pluck_num_term_nodes(x, ...)  # S3 method for workflow .pluck_num_term_nodes(x, ...)  # S3 method for model_fit .pluck_num_term_nodes(x, ...)  # S3 method for rpart .pluck_num_term_nodes(x, ...)  # S3 method for C5.0 .pluck_num_term_nodes(x, ...)  # S3 method for ranger .pluck_num_term_nodes(x, ...)  # S3 method for xgb.Booster .pluck_num_term_nodes(x, nrounds = x$niter, ...)  # S3 method for partynode .pluck_num_term_nodes(x, ...)  # S3 method for party .pluck_num_term_nodes(x, ...)  # S3 method for cforest .pluck_num_term_nodes(x, ...)  # S3 method for bagger .pluck_num_term_nodes(x, ...)  # S3 method for bart .pluck_num_term_nodes(x, ...)  # S3 method for lgb_trees .pluck_num_term_nodes(x, trees = max(x$trees), ...)  # S3 method for lgb.Booster .pluck_num_term_nodes(x, trees = x$params$num_iterations, ...)"},{"path":"/reference/pluck_num_term_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the number of terminal nodes in a tree-based model — pluck_num_term_nodes","text":"x object. ... currently used.","code":""},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics tidy magrittr %>%","code":""},{"path":"/reference/retain_characteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"tune helpers — retain_characteristics","title":"tune helpers — retain_characteristics","text":"tune helpers","code":""},{"path":"/reference/retain_characteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tune helpers — retain_characteristics","text":"","code":"retain_characteristics(wflow)  collect_characteristics(   x,   summarize = TRUE,   parameters = NULL,   add_metrics = FALSE,   wide = FALSE )"},{"path":"/reference/retain_characteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tune helpers — retain_characteristics","text":"wflow fitted model workflow. x results tune_grid(), tune_bayes(), fit_resamples(), last_fit(). collect_predictions(), control option save_pred = TRUE used. summarize logical; metrics summarized resamples (TRUE) return values individual resample. Note , x created last_fit(), summarize effect. object types, method summarizing predictions detailed . parameters optional tibble tuning parameter values can used filter predicted values processing. tibble columns tuning parameter identifier (e.g. \"my_param\" tune(\"my_param\") used). add_metrics logical combine results associated performance metrics. wide logical making information wide format.","code":""},{"path":"/reference/retain_characteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tune helpers — retain_characteristics","text":"tibble.","code":""},{"path":"/reference/retain_characteristics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"tune helpers — retain_characteristics","text":"using tune finetune packages, retain_characteristics() can used resampling tuning functions return characteristics multiple model configurations. results contained column called .extracts. collect_characteristics() can used easily wrangle results .extracts column tibble usable results. vignette Using characterize tidymodels shows example.","code":""}]
