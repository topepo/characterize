
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgs <-
+   c("baguette", "bonsai", "brulee", "butcher", "C50", "caret", "dbarts",
+     "discrim", "earth", "lobstr", "mda", "plsmod", "rlang", "rpart", "rules",
+     "sessioninfo", "tidymodels")
> 
> load_pkg <- function(x) {
+   suppressPackageStartupMessages(library(x, character.only = TRUE))
+ }
> 
> load_res <- lapply(pkgs, load_pkg)
> 
> # ------------------------------------------------------------------------------
> 
> tidymodels_prefer()
> 
> # ------------------------------------------------------------------------------
> 
> # Model fits begin with `fit_`.
> # Expected results lists start with `exp_`. There are only created when one of
> # the 'engine' packages is required to compute the results.
> 
> # ------------------------------------------------------------------------------
> 
> data(ames)
> ames$Sale_Price <- log10(ames$Sale_Price)
> ames <-
+   ames %>%
+   mutate(Sale_Price <- log10(Sale_Price)) %>%
+   slice(1:100) %>%
+   select(Sale_Price, Neighborhood, Longitude, Latitude)
> 
> data("penguins")
> penguins <- penguins[complete.cases(penguins),]
> 
> set.seed(1)
> cls_dat <- sim_classification(50)
> reg_dat <- sim_regression(50)
> mnl_dat <-
+   sim_multinomial(
+     100,
+     ~  -0.5    +  0.6 * abs(A),
+     ~ ifelse(A > 0 & B > 0, 1.0 + 0.2 * A / B, - 2),
+     ~ -0.6 * A + 0.50 * B -  A * B)
> 
> # ------------------------------------------------------------------------------
> # bagger
> 
> ## C5.0
> 
> set.seed(1)
> fit_cls_bag_c5 <-
+   bagger(class ~ ., data = cls_dat, base_model = "C5.0", times = 3) %>%
+   butcher()
> 
> # The number of terminal nodes and active predictors computed with tidy method in
> # the rules pkgs
> 
> tidy_cls_bag_c5 <-
+   purrr::map(fit_cls_bag_c5$model_df$model, tidy) %>%
+   purrr::list_rbind()
> 
> get_rule_vars <- function(x) {
+   unique(all.vars(parse_expr(x)))
+ }
> 
> var_names <- map(tidy_cls_bag_c5$rule, get_rule_vars)
> var_names <- sort(unique(unlist(var_names)))
> 
> exp_cls_bag_c5 <- list()
> exp_cls_bag_c5$num_term_nodes <- nrow(tidy_cls_bag_c5)
> exp_cls_bag_c5$num_features_active <- length(var_names)
> exp_cls_bag_c5$features_active <- var_names
> 
> ## rpart
> 
> set.seed(1)
> fit_cls_bag_rpart <-
+   bagger(class ~ ., data = cls_dat, base_model = "CART", times = 3) %>%
+   butcher()
> 
> set.seed(1)
> fit_reg_bag_rpart <-
+   bagger(Sale_Price ~ ., data = ames, base_model = "CART", times = 3) %>%
+   butcher()
> 
> ## mars
> 
> set.seed(1)
> fit_cls_bag_mars <-
+   bagger(class ~ ., data = cls_dat, base_model = "MARS", times = 3) %>%
+   butcher()
Warning message:
There were 3 warnings in `dplyr::mutate()`.
The first warning was:
ℹ In argument: `model = iter(...)`.
Caused by warning:
! glm.fit: fitted probabilities numerically 0 or 1 occurred
ℹ Run `dplyr::last_dplyr_warnings()` to see the 2 remaining warnings. 
> 
> set.seed(1)
> fit_reg_bag_mars <-
+   bagger(Sale_Price ~ ., data = ames, base_model = "MARS", times = 3) %>%
+   butcher()
> 
> ## nnet
> 
> set.seed(1)
> fit_cls_bag_nnet <-
+   bagger(class ~ ., data = cls_dat, base_model = "nnet", times = 3) %>%
+   butcher()
> 
> set.seed(1)
> fit_reg_bag_nnet <-
+   bagger(outcome ~ ., data = reg_dat, base_model = "nnet", times = 3) %>%
+   butcher()
> 
> # ------------------------------------------------------------------------------
> # bart
> 
> # TODO stop butcher from removing `varcount`; needed for 'num_term_nodes'
> 
> set.seed(1)
> fit_cls_dbart <-
+   dbarts::bart(cls_dat[-1], y.train = cls_dat$class, verbose = FALSE)
> lobstr::obj_size(fit_cls_dbart)
464.61 kB
> 
> # we need 'varcount' to measure the number of terminal nodes but butcher removes it
> cls_varcount <- fit_cls_dbart$varcount
> fit_cls_dbart <- butcher(fit_cls_dbart)
> lobstr::obj_size(fit_cls_dbart)
1.98 kB
> 
> fit_cls_dbart$varcount <- cls_varcount
> lobstr::obj_size(fit_cls_dbart)
63.46 kB
> 
> 
> set.seed(1)
> fit_reg_dbart <-
+   dbarts::bart(reg_dat[-1], y.train = reg_dat$outcome, verbose = FALSE)
> 
> reg_varcount <- fit_reg_dbart$varcount
> fit_reg_dbart <- butcher(fit_reg_dbart)
> fit_reg_dbart$varcount <- reg_varcount
> 
> # ------------------------------------------------------------------------------
> # brulee_linear_reg
> 
> set.seed(12)
> fit_reg_bru_lin <-
+   brulee_linear_reg(outcome ~ ., data = reg_dat) %>%
+   butcher()
> 
> # ------------------------------------------------------------------------------
> # brulee_logistic_reg
> 
> set.seed(12)
> fit_cls_bru_logit <-
+   brulee_logistic_reg(class ~ ., data = cls_dat, hidden_units = 3) %>%
+   butcher()
> 
> # ------------------------------------------------------------------------------
> # brulee_mlp
> 
> set.seed(12)
> fit_cls_bru_mlp <-
+   brulee_mlp(class ~ ., data = cls_dat, hidden_units = 3) %>%
+   butcher()
> 
> set.seed(12)
> fit_reg_bru_mlp <-
+   brulee_mlp(outcome ~ ., data = reg_dat, hidden_units = 3) %>%
+   butcher()
> 
> # ------------------------------------------------------------------------------
> # brulee_multinomial_reg
> 
> set.seed(12)
> fit_cls_bru_multi <-
+   brulee_multinomial_reg(class ~ ., data = mnl_dat) %>%
+   butcher()
> 
> # ------------------------------------------------------------------------------
> # C5.0
> 
> set.seed(1)
> fit_cls_tree_c5 <-
+   C5.0(class ~ ., data = cls_dat, trials = 1) %>%
+   butcher()
> 
> # The number of terminal nodes and active predictors computed with tidy method in
> # the rules pkgs
> 
> tidy_cls_tree_c5 <- tidy(fit_cls_tree_c5)
> 
> var_names <- map(tidy_cls_tree_c5$rule, ~ all.vars(parse_expr(.x)))
> var_names <- sort(unique(unlist(var_names)))
> 
> rule_sizes <- map_int(tidy_cls_tree_c5$rule, characterize:::rule_size)
> mean_size <- mean(rule_sizes)
> 
> exp_cls_tree_c5 <- list()
> exp_cls_tree_c5$num_term_nodes <- nrow(tidy_cls_tree_c5)
> exp_cls_tree_c5$num_features_active <- length(var_names)
> exp_cls_tree_c5$features_active <- var_names
> exp_cls_tree_c5$mean_rule_size <- mean_size
> 
> ###
> 
> set.seed(1)
> fit_cls_tree_bst_c5 <-
+   C5.0(class ~ ., data = cls_dat, trials = 3) %>%
+   butcher()
> 
> tidy_cls_tree_bst_c5 <- tidy(fit_cls_tree_bst_c5)
> 
> var_names <- map(tidy_cls_tree_bst_c5$rule, ~ all.vars(parse_expr(.x)))
> var_names <- sort(unique(unlist(var_names)))
> 
> rule_sizes <- map_int(tidy_cls_tree_bst_c5$rule, characterize:::rule_size)
> mean_size <- mean(rule_sizes)
> 
> exp_cls_tree_bst_c5 <- list()
> exp_cls_tree_bst_c5$num_term_nodes <- nrow(tidy_cls_tree_bst_c5)
> exp_cls_tree_bst_c5$num_features_active <- length(var_names)
> exp_cls_tree_bst_c5$features_active <- var_names
> exp_cls_tree_bst_c5$mean_rule_size <- mean_size
> 
> ###
> 
> set.seed(1)
> fit_cls_rule_c5 <-
+   C5.0(class ~ ., data = cls_dat, trials = 1, rules = TRUE) %>%
+   butcher()
> 
> tidy_cls_rule_c5 <- tidy(fit_cls_rule_c5)
> 
> var_names <- map(tidy_cls_rule_c5$rule, ~ all.vars(parse_expr(.x)))
> var_names <- sort(unique(unlist(var_names)))
> 
> rule_sizes <- map_int(tidy_cls_rule_c5$rule, characterize:::rule_size)
> mean_size <- mean(rule_sizes)
> 
> exp_cls_rule_c5 <- list()
> exp_cls_rule_c5$num_rules <- nrow(tidy_cls_rule_c5)
> exp_cls_rule_c5$num_features_active <- length(var_names)
> exp_cls_rule_c5$features_active <- var_names
> exp_cls_rule_c5$mean_rule_size <- mean_size
> 
> ###
> 
> set.seed(1)
> fit_cls_rule_bst_c5 <-
+   C5.0(class ~ ., data = cls_dat, trials = 3, rules = TRUE) %>%
+   butcher()
> 
> tidy_cls_rule_bst_c5 <- tidy(fit_cls_rule_bst_c5)
> 
> var_names <- map(tidy_cls_rule_bst_c5$rule, ~ all.vars(parse_expr(.x)))
> var_names <- sort(unique(unlist(var_names)))
> 
> rule_sizes <- map_int(tidy_cls_rule_bst_c5$rule, characterize:::rule_size)
> mean_size <- mean(rule_sizes)
> 
> exp_cls_rule_bst_c5 <- list()
> exp_cls_rule_bst_c5$num_rules <- nrow(tidy_cls_rule_bst_c5)
> exp_cls_rule_bst_c5$num_features_active <- length(var_names)
> exp_cls_rule_bst_c5$features_active <- var_names
> exp_cls_rule_bst_c5$mean_rule_size <- mean_size
> 
> # ------------------------------------------------------------------------------
> # cforest
> 
> # ------------------------------------------------------------------------------
> # cubist
> 
> # ------------------------------------------------------------------------------
> # earth
> 
> # ------------------------------------------------------------------------------
> # fda
> 
> # ------------------------------------------------------------------------------
> # formula
> 
> # ------------------------------------------------------------------------------
> # gam
> 
> # ------------------------------------------------------------------------------
> # gen.ridge
> 
> # ------------------------------------------------------------------------------
> # glm
> 
> # ------------------------------------------------------------------------------
> # glmnet
> 
> # ------------------------------------------------------------------------------
> # hardhat_blueprint
> 
> # ------------------------------------------------------------------------------
> # hurdle
> 
> # ------------------------------------------------------------------------------
> # keras.engine.sequential.Sequential
> 
> # ------------------------------------------------------------------------------
> # kknn
> 
> # ------------------------------------------------------------------------------
> # ksvm
> 
> # ------------------------------------------------------------------------------
> # lda
> 
> # ------------------------------------------------------------------------------
> # lda_diag
> 
> # ------------------------------------------------------------------------------
> # lgb.Booster
> 
> # ------------------------------------------------------------------------------
> # LiblineaR
> 
> # ------------------------------------------------------------------------------
> # lm
> 
> # ------------------------------------------------------------------------------
> # mda
> 
> # ------------------------------------------------------------------------------
> # mixo_pls
> 
> # ------------------------------------------------------------------------------
> # mixo_plsda
> 
> # ------------------------------------------------------------------------------
> # mixo_spls
> 
> # ------------------------------------------------------------------------------
> # mixo_splsda
> 
> # ------------------------------------------------------------------------------
> # multinom
> 
> # ------------------------------------------------------------------------------
> # multnet
> 
> # ------------------------------------------------------------------------------
> # naive_bayes
> 
> # ------------------------------------------------------------------------------
> # NaiveBayes
> 
> # ------------------------------------------------------------------------------
> # nnet
> 
> # ------------------------------------------------------------------------------
> # nullmodel
> 
> # ------------------------------------------------------------------------------
> # party
> 
> # ------------------------------------------------------------------------------
> # partynode
> 
> # ------------------------------------------------------------------------------
> # qda
> 
> # ------------------------------------------------------------------------------
> # qda_diag
> 
> # ------------------------------------------------------------------------------
> # randomForest
> 
> # ------------------------------------------------------------------------------
> # ranger
> 
> # ------------------------------------------------------------------------------
> # rda
> 
> # ------------------------------------------------------------------------------
> # recipe
> 
> # ------------------------------------------------------------------------------
> # rpart
> 
> # ------------------------------------------------------------------------------
> # sda
> 
> # ------------------------------------------------------------------------------
> # stanreg
> 
> # ------------------------------------------------------------------------------
> # terms
> 
> # ------------------------------------------------------------------------------
> # xgb.Booster
> 
> # ------------------------------------------------------------------------------
> # xrf
> 
> # ------------------------------------------------------------------------------
> # zeroinfl
> 
> # ------------------------------------------------------------------------------
> 
> save_names <- ls(pattern = "(^fit_)|(^exp_)")
> save(list = save_names, file = "tests/testthat/test_cases.RData", compress = TRUE)
> 
> # ------------------------------------------------------------------------------
> 
> sessioninfo::session_info()
─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.4.1 (2024-06-14)
 os       macOS 15.1.1
 system   aarch64, darwin20
 ui       X11
 language (EN)
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       America/New_York
 date     2024-12-31
 pandoc   3.1.11 @ /opt/homebrew/bin/pandoc

─ Packages ───────────────────────────────────────────────────────────────────
 package      * version    date (UTC) lib source
 backports      1.5.0      2024-05-23 [1] CRAN (R 4.4.0)
 baguette     * 1.0.2.9000 2024-10-21 [1] Github (tidymodels/baguette@a56bbbf)
 BiocParallel   1.39.0     2024-05-14 [1] Github (Bioconductor/BiocParallel@aa329b3)
 bit            4.0.5      2022-11-15 [1] CRAN (R 4.4.0)
 bit64          4.0.5      2020-08-30 [1] CRAN (R 4.4.0)
 bonsai       * 0.3.1.9000 2024-11-20 [1] Github (tidymodels/bonsai@4d5c662)
 broom        * 1.0.7.9000 2024-11-20 [1] Github (tidymodels/broom@96b8cbb)
 brulee       * 0.3.0      2024-02-14 [1] CRAN (R 4.4.0)
 butcher      * 0.3.4.9000 2024-10-21 [1] Github (tidymodels/butcher@0d3bf50)
 C50          * 0.1.8      2023-02-08 [1] CRAN (R 4.4.0)
 cachem         1.1.0      2024-05-16 [1] CRAN (R 4.4.0)
 callr          3.7.6      2024-03-25 [1] CRAN (R 4.4.0)
 caret        * 6.0-94     2023-03-21 [1] CRAN (R 4.4.0)
 characterize   0.0.0.9001 2024-12-31 [1] local
 class        * 7.3-22     2023-05-03 [2] CRAN (R 4.4.1)
 cli            3.6.3      2024-06-21 [1] CRAN (R 4.4.0)
 codetools      0.2-20     2024-03-31 [2] CRAN (R 4.4.1)
 colorspace     2.1-1      2024-07-26 [1] CRAN (R 4.4.0)
 conflicted     1.2.0      2023-02-01 [1] CRAN (R 4.4.0)
 coro           1.1.0      2024-11-05 [1] CRAN (R 4.4.1)
 corpcor        1.6.10     2021-09-16 [1] CRAN (R 4.4.0)
 Cubist         0.4.4      2024-07-02 [1] CRAN (R 4.4.0)
 data.table     1.15.4     2024-03-30 [1] CRAN (R 4.4.0)
 dbarts       * 0.9-28     2024-05-02 [1] CRAN (R 4.4.0)
 dials        * 1.3.0.9000 2024-12-16 [1] Github (tidymodels/dials@7c2e0bb)
 DiceDesign     1.10       2023-12-07 [1] CRAN (R 4.4.0)
 digest         0.6.36     2024-06-23 [1] CRAN (R 4.4.0)
 discrim      * 1.0.1.9000 2024-11-20 [1] Github (tidymodels/discrim@191c269)
 dplyr        * 1.1.4.9000 2024-11-20 [1] Github (tidyverse/dplyr@fb25640)
 earth        * 5.3.3      2024-02-26 [1] CRAN (R 4.4.0)
 ellipse        0.5.0      2023-07-20 [1] CRAN (R 4.4.0)
 fansi          1.0.6      2023-12-08 [1] CRAN (R 4.4.0)
 fastmap        1.2.0      2024-05-15 [1] CRAN (R 4.4.0)
 foreach        1.5.2      2022-02-02 [1] CRAN (R 4.4.0)
 Formula      * 1.2-5      2023-02-24 [1] CRAN (R 4.4.0)
 furrr          0.3.1      2022-08-15 [1] CRAN (R 4.4.0)
 future         1.34.0     2024-07-29 [1] CRAN (R 4.4.0)
 future.apply   1.11.2     2024-03-28 [1] CRAN (R 4.4.0)
 generics       0.1.3      2022-07-05 [1] CRAN (R 4.4.0)
 ggplot2      * 3.5.1.9000 2024-12-18 [1] Github (tidyverse/ggplot2@efc53cc)
 ggrepel        0.9.5      2024-01-10 [1] CRAN (R 4.4.0)
 globals        0.16.3     2024-03-08 [1] CRAN (R 4.4.0)
 glue           1.7.0      2024-01-09 [1] CRAN (R 4.4.0)
 gower          1.0.1      2022-12-22 [1] CRAN (R 4.4.0)
 GPfit          1.0-8      2019-02-08 [1] CRAN (R 4.4.0)
 gridExtra      2.3        2017-09-09 [1] CRAN (R 4.4.0)
 gtable         0.3.5      2024-04-22 [1] CRAN (R 4.4.0)
 hardhat        1.4.0.9002 2024-12-11 [1] Github (tidymodels/hardhat@b1fe750)
 igraph         2.0.3      2024-03-13 [1] CRAN (R 4.4.0)
 infer        * 1.0.7.9000 2024-10-11 [1] Github (tidymodels/infer@288542b)
 inum           1.0-5      2023-03-09 [1] CRAN (R 4.4.0)
 ipred          0.9-15     2024-07-18 [1] CRAN (R 4.4.0)
 iterators      1.0.14     2022-02-05 [1] CRAN (R 4.4.0)
 jsonlite       1.8.8      2023-12-04 [1] CRAN (R 4.4.0)
 lattice      * 0.22-6     2024-03-20 [2] CRAN (R 4.4.1)
 lava           1.8.0      2024-03-05 [1] CRAN (R 4.4.0)
 lhs            1.2.0      2024-06-30 [1] CRAN (R 4.4.0)
 libcoin        1.0-10     2023-09-27 [1] CRAN (R 4.4.0)
 lifecycle      1.0.4      2023-11-07 [1] CRAN (R 4.4.0)
 listenv        0.9.1      2024-01-29 [1] CRAN (R 4.4.0)
 lobstr       * 1.1.2      2022-06-22 [1] CRAN (R 4.4.0)
 lubridate      1.9.3      2023-09-27 [1] CRAN (R 4.4.0)
 magrittr       2.0.3      2022-03-30 [1] CRAN (R 4.4.0)
 MASS           7.3-61     2024-06-13 [1] CRAN (R 4.4.0)
 Matrix         1.7-0      2024-04-26 [2] CRAN (R 4.4.1)
 matrixStats    1.3.0      2024-04-11 [1] CRAN (R 4.4.0)
 mda          * 0.5-4      2023-06-23 [1] CRAN (R 4.4.0)
 memoise        2.0.1      2021-11-26 [1] CRAN (R 4.4.0)
 mixOmics       6.25.1     2024-05-14 [1] Github (mixOmicsTeam/mixOmics@2ccaa95)
 modeldata    * 1.4.0.9000 2024-10-21 [1] Github (tidymodels/modeldata@487bd6a)
 ModelMetrics   1.2.2.2    2020-03-17 [1] CRAN (R 4.4.0)
 munsell        0.5.1      2024-04-01 [1] CRAN (R 4.4.0)
 mvtnorm        1.2-6      2024-08-17 [1] CRAN (R 4.4.0)
 nlme           3.1-165    2024-06-06 [1] CRAN (R 4.4.0)
 nnet           7.3-19     2023-05-03 [2] CRAN (R 4.4.1)
 parallelly     1.38.0     2024-07-27 [1] CRAN (R 4.4.0)
 parsnip      * 1.2.1.9004 2024-12-08 [1] Github (tidymodels/parsnip@27df158)
 partykit       1.2-22     2024-08-17 [1] CRAN (R 4.4.0)
 pillar         1.9.0      2023-03-22 [1] CRAN (R 4.4.0)
 pkgconfig      2.0.3      2019-09-22 [1] CRAN (R 4.4.0)
 plotmo       * 3.6.3      2024-02-26 [1] CRAN (R 4.4.0)
 plotrix      * 3.8-4      2023-11-10 [1] CRAN (R 4.4.0)
 plsmod       * 1.0.0.9000 2024-10-21 [1] Github (tidymodels/plsmod@3dc9cb6)
 plyr           1.8.9      2023-10-02 [1] CRAN (R 4.4.0)
 prettyunits    1.2.0      2023-09-24 [1] CRAN (R 4.4.0)
 pROC           1.18.5     2023-11-01 [1] CRAN (R 4.4.0)
 processx       3.8.4      2024-03-16 [1] CRAN (R 4.4.0)
 prodlim        2024.06.25 2024-06-24 [1] CRAN (R 4.4.0)
 ps             1.7.7      2024-07-02 [1] CRAN (R 4.4.0)
 purrr        * 1.0.2.9000 2024-10-11 [1] Github (tidyverse/purrr@700ce19)
 R6             2.5.1      2021-08-19 [1] CRAN (R 4.4.0)
 rARPACK        0.11-0     2016-03-10 [1] CRAN (R 4.4.0)
 RColorBrewer   1.1-3      2022-04-03 [1] CRAN (R 4.4.0)
 Rcpp           1.0.13     2024-07-17 [1] CRAN (R 4.4.0)
 recipes      * 1.1.0.9001 2024-12-08 [1] Github (tidymodels/recipes@e738967)
 reshape2       1.4.4      2020-04-09 [1] CRAN (R 4.4.0)
 rlang        * 1.1.4      2024-06-04 [1] CRAN (R 4.4.0)
 rpart        * 4.1.23     2023-12-05 [1] CRAN (R 4.4.0)
 rsample      * 1.2.1.9000 2024-10-04 [1] Github (tidymodels/rsample@f799dba)
 RSpectra       0.16-2     2024-07-18 [1] CRAN (R 4.4.0)
 rstudioapi     0.16.0     2024-03-24 [1] CRAN (R 4.4.0)
 rules        * 1.0.2.9000 2024-10-21 [1] Github (tidymodels/rules@e04e7b3)
 safetensors    0.1.2      2023-09-12 [1] CRAN (R 4.4.0)
 scales       * 1.3.0      2023-11-28 [1] CRAN (R 4.4.0)
 sessioninfo  * 1.2.2      2021-12-06 [1] CRAN (R 4.4.0)
 sparsevctrs    0.1.0.9002 2024-12-08 [1] Github (r-lib/sparsevctrs@35720dc)
 stringi        1.8.4      2024-05-06 [1] CRAN (R 4.4.0)
 stringr        1.5.1      2023-11-14 [1] CRAN (R 4.4.0)
 survival       3.7-0      2024-06-05 [1] CRAN (R 4.4.0)
 tibble       * 3.2.1.9044 2024-12-16 [1] Github (tidyverse/tibble@e50ebe2)
 tidymodels   * 1.2.0      2024-03-25 [1] CRAN (R 4.4.0)
 tidyr        * 1.3.1.9000 2024-11-20 [1] Github (tidyverse/tidyr@3a9a93c)
 tidyselect     1.2.1      2024-03-11 [1] CRAN (R 4.4.0)
 timechange     0.3.0      2024-01-18 [1] CRAN (R 4.4.0)
 timeDate       4032.109   2023-12-14 [1] CRAN (R 4.4.0)
 torch          0.13.0     2024-05-21 [1] CRAN (R 4.4.0)
 tune         * 1.2.1.9000 2024-12-19 [1] local
 utf8           1.2.4      2023-10-22 [1] CRAN (R 4.4.0)
 vctrs          0.6.5      2023-12-01 [1] CRAN (R 4.4.0)
 withr          3.0.1      2024-07-31 [1] CRAN (R 4.4.0)
 workflows    * 1.1.4.9000 2024-12-08 [1] Github (tidymodels/workflows@784d0fd)
 workflowsets * 1.1.0.9000 2024-11-20 [1] Github (tidymodels/workflowsets@444ae2a)
 yardstick    * 1.3.1.9000 2024-11-20 [1] Github (tidymodels/yardstick@8ab8903)

 [1] /Users/max/Library/R/arm64/4.4/library
 [2] /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library

──────────────────────────────────────────────────────────────────────────────
> 
> # ------------------------------------------------------------------------------
> 
> if (!interactive()) {
+   q("no")
+ }
> proc.time()
   user  system elapsed 
  5.290   0.322   5.592 
